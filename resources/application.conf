crawlsystem {
  default-dispatcher{
    type = Dispatcher
    # What kind of ExecutionService to use
    executor = "fork-join-executor"
    # Configuration for the fork join pool
    fork-join-executor {
      # Min number of threads to cap factor-based parallelism number to
      parallelism-min = 1
      # Parallelism (threads) ... ceil(available processors * factor)
      parallelism-factor = 2.0
      # Max number of threads to cap factor-based parallelism number to
      parallelism-max = 2
    }
    # Throughput defines the maximum number of messages to be
    # processed per actor before the thread jumps to the next actor.
    # Set to 1 for as fair as possible.
    throughput = 20
    thread-pool-executor {
      keep-alive-time = 60s
      core-pool-size-min = 1
      core-pool-size-factor = 3.0
      core-pool-size-max = 2
      max-pool-size-min = 3
      max-pool-size-factor  = 3.0
      max-pool-size-max = 4
      task-queue-size = -1
      task-queue-type = "linked"

      allow-core-timeout = on
    }
  }
  akka {
    actor {
      provider = "akka.remote.RemoteActorRefProvider"
      deployment {
        /mainActor {
          remote = "akka.tcp://crawlsystem@127.0.0.1:1337"
        }
      }
      warn-about-java-serializer-usage = false
    }
    remote {
      enabled-transports = ["akka.remote.netty.tcp"]
      netty.tcp {
        hostname = "127.0.0.1"
        port = 1339
      }
    }
  }
}

collectorsystem {
  akka {
    actor {
      provider = "akka.remote.RemoteActorRefProvider"
      deployment {
        /crawlerMaster {
          remote = "akka.tcp://collectorsystem@127.0.0.1:1337"
        }
      }
      warn-about-java-serializer-usage = false
    }
  }
  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "127.0.0.1"
      port = 7331
    }
  }
}